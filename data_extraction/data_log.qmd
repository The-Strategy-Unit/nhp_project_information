---
title: Data log
order: 250
---

This page contains information about changes to the data underpinning the NHP model. If there are no changes logged for a particular version (such as 1.0) then the changes were only to the model code, and not to the underlying data.

## Version 3.4

Date updated: 23/04/2025
Please see the [release notes for v3.4.0](https://github.com/The-Strategy-Unit/nhp_data/releases/tag/v3.4.0) on the [nhp_data](https://github.com/The-Strategy-Unit/nhp_data) repository.

## Version 3.3

Date updated: 25/03/2025
Please see the [release notes for v3.3.0](https://github.com/The-Strategy-Unit/nhp_data/releases/tag/v3.3.0) on the [nhp_data](https://github.com/The-Strategy-Unit/nhp_data) repository.

## Version 3.2

Date updated: 12/02/2025
Please see the [release notes for v3.2.0](https://github.com/The-Strategy-Unit/nhp_data/releases/tag/v3.2.0) on the [nhp_data](https://github.com/The-Strategy-Unit/nhp_data) repository.

## Version 3.1

Date updated: 19/12/2024
Please see the [release notes for v3.1.0](https://github.com/The-Strategy-Unit/nhp_data/releases/tag/v3.1.0) on the [nhp_data](https://github.com/The-Strategy-Unit/nhp_data) repository.

## Version 3.0

Date updated: 13/11/2024
We have migrated our data pre-processing pipeline from SQL to Databricks. The new data pre-processing scripts are available in the public repository [nhp_data](https://github.com/The-Strategy-Unit/nhp_data). This repository supersedes the nhp_sql repositiory which will be publically archived and no longer maintained.

As part of migrating our data pre-processing, there are a number of changes to the data.

Inpatients data:

  - Include records where `patientid` is `NULL`
  - Fixed bug in `has_procedure` which was failing to filter codes beginning with `U`, `Y` or `Z`
  - Added a new flag `maternity_delivery_in_spell`, which looks to see if any episode in the spell had `maternity_episode_type=1`, the same [logic used to create the official published statistics on delivery episodes](https://digital.nhs.uk/data-and-information/publications/statistical/nhs-maternity-statistics) (applied at spell end level)
  
Inpatients mitigators:

 - ambulatory emergency care: Change the way we extract to use a more [stable and workable code list](https://github.com/The-Strategy-Unit/nhp_data/blob/main/mitigators/ip/efficiency/ambulatory_emergency_care.py)
 - evidence based interventions: Update code lists to reflect latest evidence
 - medicines related admissions: Fix bug in old SQL (explicit medicines related codes were not excluded from implicit queries properly)
 - pre-op_los mitigators: Use an [updated procedure list](https://github.com/The-Strategy-Unit/nhp_data/blob/9cd4495172b5aa63e57b29ac9172d6d512a311b9/generate_inpatients.py#L27)
 - alcohol_partially_attributable: Errors in the old code list meant some codes were missed, and some codes were not properly distinguishing between the mortality/morbidity cases
 - excess_beddays: An error in the way we handled the old csv meant some NA values were treated as 0, flagging most activity as being an excess bedday
 
Outpatients data:

  - Keep where `sitetret=null`
  
AAE data:

  - Include followups (flagged by `atentype.isin([2, 3, 4])`)
  - [Include new `acuity` column](https://github.com/The-Strategy-Unit/nhp_data/commit/b3e2ef9acf40b18f5b079533e364f74fd792e1a0#diff-e2401c3d40d30e706413f4a8efac282b166111cc6b7a44ec88c952a801fe4dc6R171) which is a more human readable version of [URGENT AND EMERGENCY CARE ACUITY (SNOMED CT)](https://www.datadictionary.nhs.uk/data_elements/urgent_and_emergency_care_acuity__snomed_ct_.html)

   
## Version 2.2

Date updated: 24/09/2024

We have updated the flagging of which episode is used as the last episode in spell. The previous update in v2.1 caused regular day attenders to be excluded. 

This new logic correctly includes regular attenders and also provides improvements over the < v.2.1 logic, such as better filtering of invalid episodes.

```sql

SELECT
  t.FYEAR, t.EPIKEY
FROM (
  SELECT
   i.EPIKEY,
   i.FYEAR,
   RN = ROW_NUMBER() OVER (
     PARTITION BY i.SUSSPELLID
     ORDER BY i.EPISTART DESC, i.EPIORDER DESC, i.EPIEND DESC, i.EPIKEY DESC
   )
 FROM
    tbInpatients i
 WHERE
   i.EPISTAT = '3'
 AND
   i.DISDATE IS NOT NULL
 AND
   i.DISMETH != '8'
 AND
   i.SUSSPELLID != '-1'
) t
WHERE
  t.RN = 1;
```

## Version 2.1

Date updated: 08/08/2024

### Inpatients

#### Procedures

We have improved the flagging of which inpatient activity is classified as procedure or not.
This is now done using the following code:

If the procedure code meets the following criteria, then `has_procedure = 0`:

```
                p.OPCODE LIKE 'O1[1-46]%'
            OR  p.OPCODE LIKE 'O28%'
            OR  p.OPCODE LIKE 'O3[01346]%'
            OR  p.OPCODE LIKE 'O4[2345678]%'
            OR  p.OPCODE LIKE 'O5[23]%'
            OR  p.OPCODE LIKE 'X[6-9]%'
            OR  p.OPCODE LIKE '[UYZ%]'
```

Else, `has_procedure = 1`

#### Last episode in spell

We have improved the flagging of which episode is used as the last episode in spell. This has been done using the published [Methodology to create provider and CIP spells from HES APC data](https://files.digital.nhs.uk/B6/4A484B/Methodology%20to%20create%20provider%20and%20CIP%20spells%20from%20HES%20APC%20data%20v2.pdf) from NHS Digital, September 2021.

The methodology is all laid out in the linked document, under the section "Creating provider spells from episodes". The Sql used is below:

```sql
SELECT
  t.EPIKEY
FROM (
  SELECT
    EPIKEY,
    RN = ROW_NUMBER() OVER (
      PARTITION BY token_person_id, ADMIDATE, PROCODE3, PROVSPNOPS
      ORDER BY EPISTART DESC, EPIORDER DESC, EPIEND DESC, EPIKEY DESC
    )
  FROM
    apc
  WHERE
    EPISTAT = '3' -- Finished consultant episode
  AND
    CLASSPAT IN ('1', '2', '5')
) t
  WHERE
      t.RN = 1;
```

#### Patient age

Some mitigators are based on patient age. We have moved away from only using ADMIAGE for patient age as this field is missing for some data. 
We now calculate patient age using the following SQL:

```sql
CASE
    WHEN (i.ADMIAGE = 999 OR i.ADMIAGE IS NULL)
        THEN IIF(i.STARTAGE > 7000, 0, i.STARTAGE)
    ELSE i.ADMIAGE
END AGE,
```

## Version 2.0

Date updated: 04/07/2024

### Inpatients

A bug was identified in the data where the Virtual Wards efficiency mitigators were wrongly flagged as activity avoidance mitigators. This meant that if any Virtual Wards efficiency mitigators were set, these were not having any impact on the model results. This error was corrected and the data re-extracted.

A bug was identified in the way that "main ICB" was calculated for providers that succeeded other providers after 2019. The activity that was selected for calculating the main ICB only used the recorded provider code in HES data, but if that provider didn't exist prior to 2019 no data could be selected. We now use the "succeeded" provider codes in this calculation.

## Version 1.2

Date updated: 06/06/2024

### A&E

The A&E Patients Left Before Being Treated mitigators now utilise the SNOMED codes "1066301000000103", "1066311000000101" and "1066321000000107". Previously, they only used the SNOMED code "1066321000000107". 

### Outpatients

In the inputs app, the Outpatients mitigators were showing all attendances, not just those without procedures. This has been corrected. There were no changes required in the actual model data.

### Inpatients

Bedday rows removed; these were previously used for capacity conversion. Since this functionality was taken out, the bedday rows were no longer required. This may impact on random sampling, meaning that the same scenario run on v1.1 and v1.2 could have different results due to the absence of these rows. However on the whole the impact should be minimal.

## Version 1.1

Date updated: 23/04/2024

### A&E

Moved to ECDS data. 

### Inpatients

- Virtual Ward and Day Procedures mitigators added. 

- Data was re-extracted and there were two missing specialties from the RTT specialties list in the model but not inputs. In the model to date, these specialties were mapped to one of the three other groups. 

- Changes to the way in which Well Babies are flagged and excluded, new logic given below:
 
 
 ```
    -- remove well babies babies
    NOT (
            -- neonatal level of care is 0
            i.WELL_BABY_IND = 'Y'
        OR
            -- healthy baby HRG
            i.SUSHRG = 'PB03Z'
        OR
        (
            -- well baby specialty on a birth episode
                i.TRETSPEF = '424'
            AND
                i.EPITYPE = '3'
        )
    );
    
    
```

Previously, we just had WELL_BABY_IND = 'N' (note the converse logic in this group).

The issue with the Well Baby indicator is it requires the provider to have a single birth episode (`epiorder` = 1 & is last episode in spell), as well as a neonatal level of care of 0.
 
A large amount of trusts incorrectly complete the neonatal level of care field, so we have altered the logic to include more potential cases, including the healthy baby HRG, and episodes where the treatment specialty is 424 (Well Baby service) and it is a birth episode (`epitype` = 3).

## Version 0.6.3

Date updated: 31/01/2024

### Inpatients

General Length of Stay mitigator added.
